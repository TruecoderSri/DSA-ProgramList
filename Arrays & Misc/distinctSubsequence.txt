	int distinctSubsequences(string s)
	{
	    // Your code goes here
	    int n=s.size();
	    vector<int> dp(n+1);
	    dp[0]=1;
	   // return solve(0,s,dp);
	   map<char,int> mp;
	   
	   for(int i=1;i<=n;i++){
	       dp[i]=(2*dp[i-1])%mod;
	       char c=s[i-1];
	       if(mp.find(c)!=mp.end()){
	           
	           dp[i]=(dp[i]-dp[mp[c]-1]+mod)%mod;
	       }
	       mp[c]=i;
	   }
	    return dp[n];
	} 
};
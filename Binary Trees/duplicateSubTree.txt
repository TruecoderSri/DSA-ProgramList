class Solution {
  public:
    /*This function returns true if the tree contains 
    a duplicate subtree of size 2 or more else returns false*/
    unordered_map<string,int> mp;
    string solve(Node*root){
        
        if(!root) return "$";
        string s="";
        // if leaf node
        if(!root->left &&!root->right)
         {s+=to_string(root->data);
         return s;}
        
        s+= to_string(root->data);
        s+=solve(root->left);
        s+=solve(root->right);
        mp[s]++;
        
        return s;
        
    }
    
    int dupSub(Node *root) {
         // code here
         
         solve(root);
         
         for(auto it:mp){
             if(it.second>=2) return 1;
         }
         return 0;
          
         
    }
class Solution {
public:

// You have to stay at index 0 after exhaustionof k steps,return  all such ways you can device where you cn move +1,0,-1 from curr positions

    const int mod=1e9+7;
    int solve(int idx,int steps,int n,vector<vector<int>>&dp){
        if(idx<0 || idx>=n) return 0;

        if(steps==0){
            return idx==0;
        }
        if(dp[idx][steps]!=-1) return dp[idx][steps];

        int result=solve(idx+1,steps-1,n,dp)%mod;
        result=(result+solve(idx-1,steps-1,n,dp))%mod;
        result=(result+solve(idx,steps-1,n,dp))%mod;

        return dp[idx][steps]=result;
    }

    int numWays(int steps, int n) {
       
        n=min(n,steps);
        vector<vector<int>> dp(n+1,vector<int>(steps+1,-1));
        return solve(0,steps,n,dp);
       
    }
};
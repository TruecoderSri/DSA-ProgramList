class Solution {
public:
    
    int knightDialer(int n) {
      
    //   define possible jumps of the knight on the keypad

      unordered_map<int,vector<int>> mp;
      if(n==1) return 10;
      
      mp[0]={4,6};
      mp[1]={6,8};
      mp[2]={7,9};
      mp[3]={4,8};
      mp[4]={0,3,9};
      mp[6]={0,1,7};
      mp[7]={2,6};
      mp[8]={1,3};
      mp[9]={2,4};
    
     vector<int> v(10,1);
     for(int i=2;i<=n;i++){
        //  to make the vector for the current n
         vector<int> temp(10);
         for(auto [key,val]:mp){
           for(auto it:val){
               temp[key]=(temp[key] + v[it])%(1000000007);
           }
         }
        //  to calculate eg. for n=6 we only require n-5 vectorthat is why prev and next vectors are made
           v=temp;
     }
     int ans=0;
     for(auto it:v){
         ans=(ans+it)%(1000000007);
     }
     return ans;
    }

};